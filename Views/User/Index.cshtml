@model IEnumerable<AdminDashboard.Models.User>
@{
    var currentPage = ViewData["CurrentPage"] ?? 1;
    var totalPages = ViewData["TotalPages"] ?? 1;
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2 class="mb-4">Manage Users</h2>

<!-- Search Form -->
<form method="get" action="@Url.Action("Index", "User")" class="mb-4">
    <div class="input-group">
        <input type="text" name="searchQuery" class="form-control" placeholder="Search by Username or Email..." value="@ViewData["SearchQuery"]" />
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-search"></i> Search
        </button>
    </div>
</form>

<a href="@Url.Action("Create", "User")" class="btn btn-primary mb-3">
    <i class="bi bi-person-plus"></i> Add New User
</a>

<div class="table-responsive">
    <table class="table table-hover align-middle table-bordered table-striped">
        <thead class="table-dark">
            <tr>
                <th scope="col" style="width: 200px">Name</th>
                <th scope="col" >Email</th>
                <th scope="col" style="width: 150px">Role</th>
                <th scope="col" style="width: 100px">Status</th>
                <th scope="col" class="text-center" style="width: 250px">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <td>
                        <span class="badge bg-@(user.ActiveBlock ? "danger" : "success")">
                            @(user.ActiveBlock ? "Blocked" : "Active")
                        </span>
                    </td>
                    <td class="text-center">
                        <form asp-action="ToggleLoginStatus" method="post" class="d-inline">
                            <input type="hidden" name="userId" value="@user.Id" />
                            <button type="submit" class="btn btn-@(user.ActiveBlock ? "success" : "secondary") btn-sm">
                                <i class="bi bi-toggle-@(user.ActiveBlock ? "on" : "off")"></i>
                                @(user.ActiveBlock ? "Unblock" : "Block")
                            </button>
                        </form>
                        <a href="@Url.Action("Edit", "User", new { id = user.Id })" class="btn btn-warning btn-sm me-1">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>
                        <a href="@Url.Action("Delete", "User", new { id = user.Id })" class="btn btn-danger btn-sm">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between mt-3">
    <div>
        <a href="@Url.Action("Index", "User", new { page = 1, searchQuery = ViewData["SearchQuery"] ?? "" })" class="btn btn-secondary btn-sm">First</a>
        <a href="@Url.Action("Index", "User", new { page = (int)currentPage - 1, searchQuery = ViewData["SearchQuery"] ?? "" })"
           class="btn btn-secondary btn-sm @((int)currentPage == 1 ? "disabled" : "")">Previous</a>
        <a href="@Url.Action("Index", "User", new { page = (int)currentPage + 1, searchQuery = ViewData["SearchQuery"] ?? "" })"
           class="btn btn-secondary btn-sm @((int)currentPage == (int)totalPages ? "disabled" : "")">Next</a>
        <a href="@Url.Action("Index", "User", new { page = totalPages, searchQuery = ViewData["SearchQuery"] ?? "" })" class="btn btn-secondary btn-sm">Last</a>
    </div>
    <div class="text-end">
        <span>Page @currentPage of @totalPages</span>
    </div>
</div>

@section Styles {
    <style>
        .table-responsive {
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
        }

        .table th, .table td {
            vertical-align: middle;
            font-size: 0.95rem; /* Đồng bộ kích thước chữ trong bảng */
        }

        .btn-close {
            float: right;
            font-size: 1.2em;
            color: #000;
        }

        .alert-dismissible .btn-close {
            position: absolute;
            top: 0.75rem;
            right: 1rem;
        }

        .input-group {
            max-width: 500px;
            margin: 0 auto;
        }

            .input-group input {
                max-width: 80%;
            }

            .input-group button {
                width: 20%;
            }

        .btn-sm {
            font-size: 0.85rem; /* Đồng bộ kích thước nút */
            padding: 0.25rem 0.75rem;
        }

        .badge {
            font-size: 0.85rem; /* Đồng bộ kích thước badge */
        }

        h2 {
            font-size: 1.75rem; /* Đồng bộ kích thước tiêu đề */
            font-weight: 600;
        }

        .btn-primary {
            font-size: 1rem;
            padding: 0.5rem 1.25rem;
        }

        .table {
            font-size: 0.95rem; /* Đồng bộ kích thước font trong bảng */
            border: 1px solid #dee2e6;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
        }

        .text-end {
            font-size: 0.9rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
}
